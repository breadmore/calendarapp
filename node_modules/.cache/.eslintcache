[{"D:\\Projects\\calendarapp\\src\\index.js":"1","D:\\Projects\\calendarapp\\src\\Calendar.js":"2","D:\\Projects\\calendarapp\\src\\App.js":"3","D:\\Projects\\calendarapp\\src\\Header.js":"4","D:\\Projects\\calendarapp\\src\\Board.js":"5","D:\\Projects\\calendarapp\\src\\Manage.js":"6","D:\\Projects\\calendarapp\\src\\DrawIn.js":"7","D:\\Projects\\calendarapp\\src\\myButton.js":"8","D:\\Projects\\calendarapp\\src\\MyButton.js":"9"},{"size":155,"mtime":1619964275729,"results":"10","hashOfConfig":"11"},{"size":7873,"mtime":1620283738658,"results":"12","hashOfConfig":"11"},{"size":2709,"mtime":1620292515349,"results":"13","hashOfConfig":"11"},{"size":2022,"mtime":1620271528389,"results":"14","hashOfConfig":"11"},{"size":741,"mtime":1620293653288,"results":"15","hashOfConfig":"11"},{"size":3466,"mtime":1620283920084,"results":"16","hashOfConfig":"11"},{"size":1990,"mtime":1620294089377,"results":"17","hashOfConfig":"11"},{"size":662,"mtime":1620289231180,"results":"18","hashOfConfig":"11"},{"size":662,"mtime":1620289231180,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16fcjix",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\calendarapp\\src\\index.js",[],["41","42"],"D:\\Projects\\calendarapp\\src\\Calendar.js",["43","44"],"import React, { Component } from 'react'\nimport moment from 'moment'\nimport axios from \"axios\";\nclass DateHeader extends Component {\n\n    dateToArray = (dates) => {\n        if(Array.isArray(dates)){\n            return dates\n        }else if(typeof dates === \"string\"){\n            return dates.split(',')\n        }else{\n            return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n        }\n    }\n\n    mapArrayToDate = (dateArray) => {\n        try{\n            if(dateArray.length !== 7){\n                console.log(new Error(\"dates props must be had 7 date\"))\n                dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n            }\n\n            return dateArray.map((date, index) => {\n                const className = ()=>{\n                    let className = \"RCA-calendar-date-component\";\n                    if(index === 0){\n                        return className + \" date-sun\"\n                    }else if(index === 6){\n                        return className + \" date-sat\"\n                    }else{\n                        return className + \" date-weekday\"\n                    }\n                }\n                return (\n                    <div className={className()} key={\"RCA-header-\"+date}>\n                        {date}\n                    </div>\n                )\n            })\n        }catch{\n            throw new Error (\"date must be string or component\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"RCA-calendar-date-header\">\n                {this.mapArrayToDate(this.dateToArray(this.props.dates))}\n            </div>\n        )\n    }\n}\n\n\nclass Week extends Component {\n\n    componentDidMount() {\n        this.getscheduleByName();\n    }\n    getscheduleByName(){\n        var name=window.location.pathname;\n        var schedule=[];\n        axios.get('/api/getschedule'+name)\n            .then(res=>\n                res.data.forEach(function (item,index){\n                    var str =(item.taskdate+\"-\"+item.tasknum);\n                    var cbox = document.getElementById(str);\n                    cbox.checked = true;\n                    if(item.tasknum===4){\n                        for(var i=0; i<4; i++){\n                            str =(item.taskdate+\"-\"+i)\n                            cbox = document.getElementById(str);\n                            cbox.disabled=true;\n                            cbox.checked=false;\n                        }\n                    }\n                })\n            );\n    }\n\n    checkChange =({target})=>{\n        var date = target.id.substr(0,10);\n        var task = target.id.substr(11,12);\n        let data={\n            uname:window.location.pathname.substr(1,6),\n            taskdate:date,\n            tasknum:task\n        }\n        if(target.checked){\n            axios.post('/api', (data))\n        }else{\n            axios.delete('/api', {data:data})\n        }\n        if(task==='4'){\n            if(target.checked){\n                for(var i=0; i<4; i++) {\n                    console.log(\"test\");\n                    document.getElementById(date+'-'+i).disabled = true;\n                    data.tasknum=i;\n                    axios.delete('/api', {data: data})\n                }\n            }else{\n                for(var i=0; i<4; i++) {\n                    document.getElementById(date+'-'+i).disabled = false;\n                }\n            }\n\n\n        }\n    }\n    Days = (firstDayFormat,weekIndex) => {\n        const _days = [];\n\n        for (let i = 0; i < 7; i++) {\n\n            const Day = moment(firstDayFormat).add('d', i);\n            _days.push({\n                yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\n                getDay: Day.format('D'),\n                isHolyDay: false,\n                weekIndex\n            });\n        }\n        return _days;\n    }\n\n    mapDaysToComponents = (Days,calendarMonthYear ,selectedDayFormat ,fn = () => { }) => {\n\n        const thisMonth = moment(calendarMonthYear);\n        return Days.map((dayInfo, i) => {\n\n            let className = \"date-weekday-label\";\n\n            if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\n                className = \"date-notThisMonth\";\n            } else if (i === 0) {\n                className = \"date-sun\"\n            }else if(i===6){\n                className =\"date-sat\"\n            }\n\n            if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\n                className=\"selected\";\n            }\n            if(className!==\"date-notThisMonth\"){\n                return (\n                    <div className={\"RCA-calendar-day \" + className}key={`RCA-${dayInfo.weekIndex}-${i}-day`}onClick={() => fn(dayInfo.yearMonthDayFormat)}>\n                        <label className=\"RCA-calendar-day-label\">\n                            {dayInfo.getDay}\n                        </label>\n                        <div className=\"RCA-calendar-day-container\">\n                            <input type=\"checkbox\" onChange={(e)=>{\n                                this.checkChange(e);\n                            }} id={`${dayInfo.yearMonthDayFormat}-0`}/> 지방\n                            <input type=\"checkbox\" onChange={(e)=>{\n                                this.checkChange(e);\n                            }}id={`${dayInfo.yearMonthDayFormat}-1`}/> 수도권\n                            <input type=\"checkbox\" onChange={(e)=>{\n                                this.checkChange(e);\n                            }}id={`${dayInfo.yearMonthDayFormat}-2`}/> 6차시\n                            <input type=\"checkbox\" onChange={(e)=>{\n                                this.checkChange(e);\n                            }}id={`${dayInfo.yearMonthDayFormat}-3`}/> 4차시\n                            <input type=\"checkbox\" onChange={(e)=>{\n                                this.checkChange(e);\n                            }}id={`${dayInfo.yearMonthDayFormat}-4`}/> 조정 가능\n                        </div>\n                    </div>\n                )\n            }else\n            return (\n                    <div className={\"RCA-calendar-day \" + className}key={`RCA-${dayInfo.weekIndex}-${i}-day`}onClick={() => fn(dayInfo.yearMonthDayFormat)}>\n                        <label className=\"RCA-calendar-day-label\">\n                            {dayInfo.getDay}\n                        </label>\n                    </div>\n            )\n        })\n    }\n    render() {\n        return (\n            <div className=\"RCA-calendar-week\">\n                {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,this.props.weekIndex),\n                    this.props.ymOfThisCalendar,\n                    this.props.selected,\n                    this.props.fn\n                )}\n            </div>\n        )\n    }\n}\n\nexport default class Calendar extends Component {\n\n    Weeks = (monthYear,selected,clickFn) => {\n        const firstDayOfMonth = moment(monthYear).startOf('month');\n        const firstDateOfMonth = firstDayOfMonth.get('d');\n\n        const firstDayOfWeek = firstDayOfMonth.clone().add('d', -firstDateOfMonth);\n\n        const _Weeks = [];\n\n        for (let i = 0; i < 6; i++) {\n            _Weeks.push((\n                <Week key={`RCA-calendar-week-${i}`}\n                      weekIndex={i}\n                      ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\n                      firstDayOfThisWeekformat={firstDayOfWeek.clone().add('d', i * 7).format(\"YYYY-MM-DD\")}\n                      selected={selected}\n                      fn={clickFn}\n                />\n            ))\n        }\n        return _Weeks\n    }\n\n    render() {\n        return (\n            <div className=\"RCA-calendar-container\">\n                <DateHeader dates={\"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"} />\n                {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\n            </div>\n        )\n    }\n}","D:\\Projects\\calendarapp\\src\\App.js",[],"D:\\Projects\\calendarapp\\src\\Header.js",[],"D:\\Projects\\calendarapp\\src\\Board.js",[],"D:\\Projects\\calendarapp\\src\\Manage.js",["45"],"import React, {Component} from 'react'\r\nimport axios from \"axios\";\r\nclass DateSide extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"RCA-manage-date-side\">\r\n                <h3 className=\"RCA-manage-title\">\r\n                    {this.props.selected} 강사 현황\r\n                </h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ScheduleList extends Component{\r\n    componentDidUpdate() {\r\n        this.resetAllschedule();\r\n        this.DrawAllschedule()\r\n    }\r\n    componentWillUpdate(){\r\n    }\r\n    resetAllschedule(){\r\n        var cbox_0 = document.getElementById(\"0-list\");\r\n        var cbox_1 = document.getElementById(\"1-list\");\r\n        var cbox_2 = document.getElementById(\"2-list\");\r\n        var cbox_3 = document.getElementById(\"3-list\");\r\n        var cbox_4 = document.getElementById(\"4-list\");\r\n\r\n        cbox_0.innerText='';\r\n        cbox_1.innerText='';\r\n        cbox_2.innerText='';\r\n        cbox_3.innerText='';\r\n        cbox_4.innerText='';\r\n    }\r\n    DrawAllschedule(){\r\n        var cbox_0 = document.getElementById(\"0-list\");\r\n        var cbox_1 = document.getElementById(\"1-list\");\r\n        var cbox_2 = document.getElementById(\"2-list\");\r\n        var cbox_3 = document.getElementById(\"3-list\");\r\n        var cbox_4 = document.getElementById(\"4-list\");\r\n\r\n        axios.get('/api/getselect/'+this.props.selected)\r\n            .then(res=>\r\n                res.data.forEach(function (item,index){\r\n                    var content=document.createTextNode(item.uname);\r\n                    switch (item.tasknum){\r\n                        case 0:\r\n                            cbox_0.appendChild(content);\r\n                            break\r\n                        case 1:\r\n                            cbox_1.appendChild(content);\r\n                            break\r\n                        case 2:\r\n                            cbox_2.appendChild(content);\r\n                            break\r\n                        case 3:\r\n                            cbox_3.appendChild(content);\r\n                            break\r\n                        case 4:\r\n                            cbox_4.appendChild(content);\r\n                            break\r\n                    }\r\n                })\r\n            );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"RCA-manage-schedule-list\">\r\n                <div id=\"RCA-manage-0\">\r\n                    <h2>지방</h2>\r\n                    <p id=\"0-list\"></p>\r\n                </div>\r\n                <div id=\"RCA-manage-1\">\r\n                    <h2>수도권</h2>\r\n                    <p id=\"1-list\"></p>\r\n                </div>\r\n                <div id=\"RCA-manage-2\">\r\n                    <h2>6차시</h2>\r\n                    <p id=\"2-list\"></p>\r\n                </div>\r\n                <div id=\"RCA-manage-3\">\r\n                    <h2>4차시</h2>\r\n                    <p id=\"3-list\"></p>\r\n                </div>\r\n                <div className=\"RCA-manage-adjustable\" id=\"RCA-manage-4\">\r\n                    <h2>조정 가능</h2>\r\n                    <p id=\"4-list\"></p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Manage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"RCA-manage-container\">\r\n                <DateSide selected={this.props.selected}/>\r\n                <ScheduleList selected={this.props.selected}/>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Projects\\calendarapp\\src\\DrawIn.js",[],"D:\\Projects\\calendarapp\\src\\myButton.js",[],"D:\\Projects\\calendarapp\\src\\MyButton.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":62,"column":13,"nodeType":"52","messageId":"53","endLine":62,"endColumn":21},{"ruleId":"54","severity":1,"message":"55","line":103,"column":25,"nodeType":"52","messageId":"56","endLine":103,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":47,"column":21,"nodeType":"59","messageId":"60","endLine":63,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'schedule' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'i' is already defined.","redeclared","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]