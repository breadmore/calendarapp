{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\calendarapp\\\\src\\\\Calendar.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DateHeader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.dateToArray = dates => {\n      if (Array.isArray(dates)) {\n        return dates;\n      } else if (typeof dates === \"string\") {\n        return dates.split(',');\n      } else {\n        return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n      }\n    };\n\n    this.mapArrayToDate = dateArray => {\n      try {\n        if (dateArray.length !== 7) {\n          console.log(new Error(\"date props must be had 7 date\"));\n          dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n        }\n\n        return dateArray.map((date, index) => {\n          const className = () => {\n            let className = \"RCA-calendar-date-component\";\n\n            if (index === 0) {\n              return className + \"date-sun\";\n            } else if (index === 6) {\n              return className + \"date-sat\";\n            } else {\n              return className + \"date-weekday\";\n            }\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className(),\n            children: date\n          }, \"RCA-header-\" + date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this);\n        });\n      } catch {\n        throw new Error(\"date must be string or component\");\n      }\n    };\n  }\n\n}\n\nexport default class Calendar extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RCA-calendar-container\",\n      children: \"calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/calendarapp/src/Calendar.js"],"names":["React","Component","DateHeader","dateToArray","dates","Array","isArray","split","mapArrayToDate","dateArray","length","console","log","Error","map","date","index","className","Calendar","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAC9BE,WAD8B,GACfC,KAAD,IAAU;AACpB,UAAGC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAH,EAAwB;AACpB,eAAOA,KAAP;AACH,OAFD,MAEM,IAAG,OAAOA,KAAP,KAAiB,QAApB,EAA6B;AAC/B,eAAOA,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAP;AACH,OAFK,MAED;AACD,eAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAP;AACH;AACJ,KAT6B;;AAAA,SAW9BC,cAX8B,GAWZC,SAAD,IAAc;AAC3B,UAAG;AACC,YAAGA,SAAS,CAACC,MAAV,KAAoB,CAAvB,EAAyB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,KAAJ,CAAU,+BAAV,CAAZ;AACAJ,UAAAA,SAAS,GAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,CAAX;AACH;;AACD,eAAOA,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAe;AAChC,gBAAMC,SAAS,GAAG,MAAK;AACnB,gBAAIA,SAAS,GAAG,6BAAhB;;AACA,gBAAGD,KAAK,KAAK,CAAb,EAAe;AACX,qBAAOC,SAAS,GAAE,UAAlB;AACH,aAFD,MAEM,IAAGD,KAAK,KAAI,CAAZ,EAAc;AAChB,qBAAOC,SAAS,GAAC,UAAjB;AACH,aAFK,MAED;AACD,qBAAOA,SAAS,GAAE,cAAlB;AACH;AACJ,WATD;;AAUA,8BACI;AAAK,YAAA,SAAS,EAAEA,SAAS,EAAzB;AAAA,sBACKF;AADL,aAAkC,gBAAcA,IAAhD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAhBM,CAAP;AAiBH,OAtBD,CAsBC,MAAK;AAAC,cAAM,IAAIF,KAAJ,CAAU,kCAAV,CAAN;AAAoD;AAC9D,KAnC6B;AAAA;;AAAA;;AAuClC,eAAe,MAAMK,QAAN,SAAuBjB,SAAvB,CAAiC;AAC5CkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAP2C","sourcesContent":["import React, { Component } from 'react'\n\nclass DateHeader extends Component{\n    dateToArray = (dates) =>{\n        if(Array.isArray(dates)){\n            return dates\n        }else if(typeof dates === \"string\"){\n            return dates.split(',')\n        }else{\n            return [\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"]\n        }\n    }\n\n    mapArrayToDate = (dateArray) =>{\n        try{\n            if(dateArray.length !==7){\n                console.log(new Error(\"date props must be had 7 date\"))\n                dateArray =[\"일\",\"월\",\"화\",\"수\",\"목\",\"금\",\"토\"]\n            }\n            return dateArray.map((date, index)=>{\n                const className = () =>{\n                    let className = \"RCA-calendar-date-component\";\n                    if(index === 0){\n                        return className +\"date-sun\"\n                    }else if(index ===6){\n                        return className+\"date-sat\"\n                    }else{\n                        return className +\"date-weekday\"\n                    }\n                }\n                return(\n                    <div className={className()} key={\"RCA-header-\"+date}>\n                        {date}\n                    </div>\n                )\n            })\n        }catch{throw new Error(\"date must be string or component\")}\n    }\n}\n\n\nexport default class Calendar extends Component {\n    render() {\n        return (\n            <div className=\"RCA-calendar-container\">\n            calendar\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}