{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\calendarapp\\\\src\\\\modal.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoModal = props => /*#__PURE__*/_jsxDEV(Modal, {\n  isOpen: !!props.selectedTodo,\n  contentLabel: \"Selected Todo\",\n  onRequestClose: props.onModalClose,\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Selected Option\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), props.selectedTodo && /*#__PURE__*/_jsxDEV(\"p\", {\n    children: props.selectedTodo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 32\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.onModalClose,\n    children: \"Okay\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n\n_c = TodoModal;\nexport default TodoModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoModal\");","map":{"version":3,"sources":["D:/Projects/calendarapp/src/modal.js"],"names":["React","Component","Modal","TodoModal","props","selectedTodo","onModalClose"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,iBACd,QAAC,KAAD;AACI,EAAA,MAAM,EAAE,CAAC,CAACA,KAAK,CAACC,YADpB;AAEI,EAAA,YAAY,EAAC,eAFjB;AAGI,EAAA,cAAc,EAAED,KAAK,CAACE,YAH1B;AAAA,0BAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,EAMKF,KAAK,CAACC,YAAN,iBAAsB;AAAA,cAAID,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,UAN3B,eAOI;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMH,S;AAWN,eAAeA,SAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nconst TodoModal = (props) =>(\r\n    <Modal\r\n        isOpen={!!props.selectedTodo}\r\n        contentLabel=\"Selected Todo\"\r\n        onRequestClose={props.onModalClose}\r\n    >\r\n        <h3>Selected Option</h3>\r\n        {props.selectedTodo && <p>{props.selectedTodo}</p>}\r\n        <button onClick={props.onModalClose}>Okay</button>\r\n    </Modal>\r\n)\r\nexport default TodoModal"]},"metadata":{},"sourceType":"module"}