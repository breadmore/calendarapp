{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\calendarapp\\\\src\\\\Calendar.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DateHeader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.dateToArray = dates => {\n      if (Array.isArray(dates)) {\n        return dates;\n      } else if (typeof dates === \"string\") {\n        return dates.split(',');\n      } else {\n        return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n      }\n    };\n\n    this.mapArrayToDate = dateArray => {\n      try {\n        if (dateArray.length !== 7) {\n          console.log(new Error(\"dates props must be had 7 date\"));\n          dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n        }\n\n        return dateArray.map((date, index) => {\n          const className = () => {\n            let className = \"RCA-calendar-date-component\";\n\n            if (index === 0) {\n              return className + \" date-sun\";\n            } else if (index === 6) {\n              return className + \" date-sat\";\n            } else {\n              return className + \" date-weekday\";\n            }\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: className(),\n            children: date\n          }, \"RCA-header-\" + date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this);\n        });\n      } catch {\n        throw new Error(\"date must be string or component\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RCA-calendar-date-header\",\n      children: this.mapArrayToDate(this.dateToArray(this.props.dates))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Week extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.Days = firstDayFormat => {\n      const _days = [];\n\n      for (let i = 0; i < 7; i++) {\n        const Day = moment(firstDayFormat).add('d', i);\n\n        _days.push({\n          yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\n          getDay: Day.format('D'),\n          isHolyDay: false\n        });\n      }\n\n      return _days;\n    };\n\n    this.mapDaysToComponents = (Days, fn = () => {}) => {\n      return Days.map((dayInfo, i) => {\n        let className = \"date-weekday-label\";\n\n        if (i === 0) {\n          className = \"date-sun\";\n        } else if (i === 6) {\n          className = \"date-sat\";\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RCA-calendar-day \" + className,\n          onClick: () => fn(dayInfo.yearMonthDayFormat),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"RCA-calendar-day-label\",\n            children: dayInfo.getDay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RCA-calendar-week\",\n      children: this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class Calendar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.Weeks = monthYear => {\n      const firstDayOfMonth = moment(monthYear).startOf('month');\n      const firstDateOfMonth = firstDayOfMonth.get('d');\n      const firstDayOfWeek = firstDayOfMonth.clone().add('d', -firstDateOfMonth); // const lastDayOfThisCalendar = dayOfThisCalendar.clone().add('d', 6 * 7);\n\n      const _Weeks = [];\n\n      for (let i = 0; i < 6; i++) {\n        _Weeks.push( /*#__PURE__*/_jsxDEV(Week, {\n          firstDayOfThisWeekformat: firstDayOfWeek.clone().add('d', i * 7).format(\"YYYY-MM-DD\")\n        }, `RCA-calendar-week-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this));\n      }\n\n      return _Weeks;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RCA-calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(DateHeader, {\n        dates: \"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), this.Weeks(this.props.YM)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/calendarapp/src/Calendar.js"],"names":["React","Component","moment","DateHeader","dateToArray","dates","Array","isArray","split","mapArrayToDate","dateArray","length","console","log","Error","map","date","index","className","render","props","Week","state","Days","firstDayFormat","_days","i","Day","add","push","yearMonthDayFormat","format","getDay","isHolyDay","mapDaysToComponents","fn","dayInfo","firstDayOfThisWeekformat","Calendar","Weeks","monthYear","firstDayOfMonth","startOf","firstDateOfMonth","get","firstDayOfWeek","clone","_Weeks","YM"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BG,WAF+B,GAEhBC,KAAD,IAAW;AACrB,UAAGC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAH,EAAwB;AACpB,eAAOA,KAAP;AACH,OAFD,MAEM,IAAG,OAAOA,KAAP,KAAiB,QAApB,EAA6B;AAC/B,eAAOA,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAP;AACH,OAFK,MAED;AACD,eAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAAP;AACH;AACJ,KAV8B;;AAAA,SAY/BC,cAZ+B,GAYbC,SAAD,IAAe;AAC5B,UAAG;AACC,YAAGA,SAAS,CAACC,MAAV,KAAqB,CAAxB,EAA0B;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,KAAJ,CAAU,gCAAV,CAAZ;AACAJ,UAAAA,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAAZ;AACH;;AAED,eAAOA,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,gBAAMC,SAAS,GAAG,MAAI;AAClB,gBAAIA,SAAS,GAAG,6BAAhB;;AACA,gBAAGD,KAAK,KAAK,CAAb,EAAe;AACX,qBAAOC,SAAS,GAAG,WAAnB;AACH,aAFD,MAEM,IAAGD,KAAK,KAAK,CAAb,EAAe;AACjB,qBAAOC,SAAS,GAAG,WAAnB;AACH,aAFK,MAED;AACD,qBAAOA,SAAS,GAAG,eAAnB;AACH;AACJ,WATD;;AAUA,8BACI;AAAK,YAAA,SAAS,EAAEA,SAAS,EAAzB;AAAA,sBACKF;AADL,aAAkC,gBAAcA,IAAhD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAhBM,CAAP;AAiBH,OAvBD,CAuBC,MAAK;AACF,cAAM,IAAIF,KAAJ,CAAW,kCAAX,CAAN;AACH;AACJ,KAvC8B;AAAA;;AAyC/BK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBACK,KAAKV,cAAL,CAAoB,KAAKL,WAAL,CAAiB,KAAKgB,KAAL,CAAWf,KAA5B,CAApB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/C8B;;AAkDnC,MAAMgB,IAAN,SAAmBpB,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBqB,KADyB,GACjB,EADiB;;AAAA,SAGzBC,IAHyB,GAGjBC,cAAD,IAAoB;AACvB,YAAMC,KAAK,GAAG,EAAd;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAExB,cAAMC,GAAG,GAAGzB,MAAM,CAACsB,cAAD,CAAN,CAAuBI,GAAvB,CAA2B,GAA3B,EAAgCF,CAAhC,CAAZ;;AACAD,QAAAA,KAAK,CAACI,IAAN,CAAW;AACPC,UAAAA,kBAAkB,EAAEH,GAAG,CAACI,MAAJ,CAAW,YAAX,CADb;AAEPC,UAAAA,MAAM,EAAEL,GAAG,CAACI,MAAJ,CAAW,GAAX,CAFD;AAGPE,UAAAA,SAAS,EAAE;AAHJ,SAAX;AAKH;;AAED,aAAOR,KAAP;AACH,KAjBwB;;AAAA,SAmBzBS,mBAnByB,GAmBH,CAACX,IAAD,EAAOY,EAAE,GAAG,MAAM,CACvC,CADqB,KAChB;AAEF,aAAOZ,IAAI,CAACR,GAAL,CAAS,CAACqB,OAAD,EAAUV,CAAV,KAAgB;AAE5B,YAAIR,SAAS,GAAG,oBAAhB;;AAEA,YAAIQ,CAAC,KAAK,CAAV,EAAa;AACTR,UAAAA,SAAS,GAAG,UAAZ;AACH,SAFD,MAEO,IAAIQ,CAAC,KAAK,CAAV,EAAa;AAChBR,UAAAA,SAAS,GAAG,UAAZ;AACH;;AAED,4BACI;AAAK,UAAA,SAAS,EAAE,sBAAsBA,SAAtC;AAAiD,UAAA,OAAO,EAAE,MAAMiB,EAAE,CAACC,OAAO,CAACN,kBAAT,CAAlE;AAAA,iCACI;AAAO,YAAA,SAAS,EAAC,wBAAjB;AAAA,sBACKM,OAAO,CAACJ;AADb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAnBM,CAAP;AAoBH,KA1CwB;AAAA;;AA2CzBb,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACK,KAAKe,mBAAL,CAAyB,KAAKX,IAAL,CAAU,KAAKH,KAAL,CAAWiB,wBAArB,CAAzB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAjDwB;;AAqD7B,eAAe,MAAMC,QAAN,SAAuBrC,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE5CsC,KAF4C,GAEnCC,SAAD,IAAe;AACnB,YAAMC,eAAe,GAAGvC,MAAM,CAACsC,SAAD,CAAN,CAAkBE,OAAlB,CAA0B,OAA1B,CAAxB;AACA,YAAMC,gBAAgB,GAAGF,eAAe,CAACG,GAAhB,CAAoB,GAApB,CAAzB;AAEA,YAAMC,cAAc,GAAGJ,eAAe,CAACK,KAAhB,GAAwBlB,GAAxB,CAA4B,GAA5B,EAAiC,CAACe,gBAAlC,CAAvB,CAJmB,CAKnB;;AAEA,YAAMI,MAAM,GAAG,EAAf;;AAEA,WAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBqB,QAAAA,MAAM,CAAClB,IAAP,eACI,QAAC,IAAD;AAAqC,UAAA,wBAAwB,EAAEgB,cAAc,CAACC,KAAf,GAAuBlB,GAAvB,CAA2B,GAA3B,EAAgCF,CAAC,GAAE,CAAnC,EAAsCK,MAAtC,CAA6C,YAA7C;AAA/D,WAAY,qBAAoBL,CAAE,EAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH;;AACD,aAAOqB,MAAP;AACH,KAjB2C;AAAA;;AAmB5C5B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKoB,KAAL,CAAW,KAAKnB,KAAL,CAAW4B,EAAtB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA1B2C","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\n\nclass DateHeader extends Component {\n\n    dateToArray = (dates) => {\n        if(Array.isArray(dates)){\n            return dates\n        }else if(typeof dates === \"string\"){\n            return dates.split(',')\n        }else{\n            return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n        }\n    }\n\n    mapArrayToDate = (dateArray) => {\n        try{\n            if(dateArray.length !== 7){\n                console.log(new Error(\"dates props must be had 7 date\"))\n                dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\n            }\n\n            return dateArray.map((date, index) => {\n                const className = ()=>{\n                    let className = \"RCA-calendar-date-component\";\n                    if(index === 0){\n                        return className + \" date-sun\"\n                    }else if(index === 6){\n                        return className + \" date-sat\"\n                    }else{\n                        return className + \" date-weekday\"\n                    }\n                }\n                return (\n                    <div className={className()} key={\"RCA-header-\"+date}>\n                        {date}\n                    </div>\n                )\n            })\n        }catch{\n            throw new Error (\"date must be string or component\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"RCA-calendar-date-header\">\n                {this.mapArrayToDate(this.dateToArray(this.props.dates))}\n            </div>\n        )\n    }\n}\n\nclass Week extends Component {\n    state = {}\n\n    Days = (firstDayFormat) => {\n        const _days = [];\n\n        for (let i = 0; i < 7; i++) {\n\n            const Day = moment(firstDayFormat).add('d', i);\n            _days.push({\n                yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\n                getDay: Day.format('D'),\n                isHolyDay: false\n            });\n        }\n\n        return _days;\n    }\n\n    mapDaysToComponents = (Days, fn = () => {\n    }) => {\n\n        return Days.map((dayInfo, i) => {\n\n            let className = \"date-weekday-label\";\n\n            if (i === 0) {\n                className = \"date-sun\";\n            } else if (i === 6) {\n                className = \"date-sat\"\n            }\n\n            return (\n                <div className={\"RCA-calendar-day \" + className} onClick={() => fn(dayInfo.yearMonthDayFormat)}>\n                    <label className=\"RCA-calendar-day-label\">\n                        {dayInfo.getDay}\n                    </label>\n\n                    {/* <label className=\"RCA-calendar-day\">{dayInfo.getDay}</label> */}\n                </div>\n            )\n        })\n    }\n    render() {\n        return (\n            <div className=\"RCA-calendar-week\">\n                {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat))}\n            </div>\n        )\n    }\n}\n\n\nexport default class Calendar extends Component {\n\n    Weeks = (monthYear) => {\n        const firstDayOfMonth = moment(monthYear).startOf('month');\n        const firstDateOfMonth = firstDayOfMonth.get('d');\n\n        const firstDayOfWeek = firstDayOfMonth.clone().add('d', -firstDateOfMonth);\n        // const lastDayOfThisCalendar = dayOfThisCalendar.clone().add('d', 6 * 7);\n\n        const _Weeks = [];\n\n        for (let i = 0; i < 6; i++) {\n            _Weeks.push((\n                <Week key={`RCA-calendar-week-${i}`} firstDayOfThisWeekformat={firstDayOfWeek.clone().add('d', i *7).format(\"YYYY-MM-DD\")} />\n            ))\n        }\n        return _Weeks\n    }\n\n    render() {\n        return (\n            <div className=\"RCA-calendar-container\">\n                <DateHeader dates={\"Sun, Mon, Tue, Wed, Thu, Fri, Sat\"} />\n                {this.Weeks(this.props.YM)}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}